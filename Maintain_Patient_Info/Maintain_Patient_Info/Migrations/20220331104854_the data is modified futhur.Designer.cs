// <auto-generated />
using System;
using Maintain_Patient_Info.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Maintain_Patient_Info.Migrations
{
    [DbContext(typeof(PatientManagementContext))]
    [Migration("20220331104854_the data is modified futhur")]
    partial class thedataismodifiedfuthur
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Maintain_Patient_Info.Base.PatientsRegistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfRegi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("PateintId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PatientsRegistory");
                });

            modelBuilder.Entity("Maintain_Patient_Info.HospitalServices.Consultation", b =>
                {
                    b.Property<int>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Charge")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocId");

                    b.ToTable("Consultation");

                    b.HasData(
                        new
                        {
                            DocId = 1,
                            Charge = 4005,
                            DoctorName = "Hari",
                            Purpose = "skin Problem"
                        },
                        new
                        {
                            DocId = 2,
                            Charge = 500,
                            DoctorName = "Rahul",
                            Purpose = "Headache"
                        },
                        new
                        {
                            DocId = 3,
                            Charge = 450,
                            DoctorName = "Kiran",
                            Purpose = "Fever"
                        },
                        new
                        {
                            DocId = 4,
                            Charge = 500,
                            DoctorName = "Srikanth",
                            Purpose = "Stomach Pain"
                        });
                });

            modelBuilder.Entity("Maintain_Patient_Info.HospitalServices.LabTests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Charge")
                        .HasColumnType("int");

                    b.Property<string>("LabTestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabTestResult")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LabTests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Charge = 150,
                            LabTestName = "Blood Test",
                            LabTestResult = "Completed"
                        },
                        new
                        {
                            Id = 2,
                            Charge = 200,
                            LabTestName = "Creatine Test",
                            LabTestResult = "Pending"
                        },
                        new
                        {
                            Id = 3,
                            Charge = 100,
                            LabTestName = "Lipid Profile",
                            LabTestResult = "Completed"
                        },
                        new
                        {
                            Id = 4,
                            Charge = 150,
                            LabTestName = "Diabetes Test",
                            LabTestResult = "Pending"
                        });
                });

            modelBuilder.Entity("Maintain_Patient_Info.HospitalServices.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("charge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomType = "Single",
                            charge = 4000
                        },
                        new
                        {
                            Id = 2,
                            RoomType = "Single",
                            charge = 4000
                        },
                        new
                        {
                            Id = 3,
                            RoomType = "Double",
                            charge = 4000
                        },
                        new
                        {
                            Id = 4,
                            RoomType = "ICU",
                            charge = 6000
                        },
                        new
                        {
                            Id = 5,
                            RoomType = "Special Rooms",
                            charge = 6500
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
